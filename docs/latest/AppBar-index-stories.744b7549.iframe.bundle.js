"use strict";(self.webpackChunk_melfore_mosaic=self.webpackChunk_melfore_mosaic||[]).push([[200],{"./src/components/AppBar/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Actions:function(){return Actions},CustomContent:function(){return CustomContent},Empty:function(){return Empty},Locale:function(){return Locale},Localized:function(){return Localized},Primary:function(){return Primary},Styled:function(){return Styled},TitleClickable:function(){return TitleClickable},UserMenu:function(){return UserMenu},Username:function(){return Username},UsernameIcon:function(){return UsernameIcon},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_types_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/types/Icon.ts"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/index.ts"),_utils_logger__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/logger/index.ts"),_utils_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/utils/stories/index.tsx"),_utils_stories_decorators_Locale__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/utils/stories/decorators/Locale.tsx"),_Icon__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/components/Icon/index.tsx"),_Typography__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("./src/components/Typography/index.tsx"),___WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("./src/components/AppBar/index.tsx");(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.jK)({testIdAttribute:"data-cy"});___WEBPACK_IMPORTED_MODULE_9__.Ay.displayName="AppBar",___WEBPACK_IMPORTED_MODULE_9__.qJ.displayName="AppBar";const meta={title:"Surfaces/AppBar",component:___WEBPACK_IMPORTED_MODULE_9__.qJ,decorators:[_utils_stories_decorators_Locale__WEBPACK_IMPORTED_MODULE_6__.Ay],parameters:{docs:{...(0,_utils_stories__WEBPACK_IMPORTED_MODULE_5__.A)({basedOn:{label:"MUI AppBar Component",url:"https://mui.com/components/app-bar/"},component:"AppBar",e2eTestInfo:{dataCyDefault:___WEBPACK_IMPORTED_MODULE_9__.Y5,dataCyShortcut:___WEBPACK_IMPORTED_MODULE_9__.Dx,subpartsSuffixes:(0,_utils__WEBPACK_IMPORTED_MODULE_3__.kC)(___WEBPACK_IMPORTED_MODULE_9__.op)},localizableProps:___WEBPACK_IMPORTED_MODULE_9__.eH}),description:{component:"The AppBar is a surface that contains application navigation and other content."}}}};__webpack_exports__.default=meta;const onActionMock=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(0,_utils_logger__WEBPACK_IMPORTED_MODULE_4__.fH)("AppBar","onAction handler"))),onMenuMock=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(0,_utils_logger__WEBPACK_IMPORTED_MODULE_4__.fH)("AppBar","onMenu handler"))),onLocaleMock=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(0,_utils_logger__WEBPACK_IMPORTED_MODULE_4__.fH)("AppBar","onLocale handler"))),onTitleMock=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(0,_utils_logger__WEBPACK_IMPORTED_MODULE_4__.fH)("AppBar","onTitle handler"))),onUserMock=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(0,_utils_logger__WEBPACK_IMPORTED_MODULE_4__.fH)("AppBar","onUser handler"))),Primary={args:{actions:[{icon:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.settings,onClick:onActionMock,tooltip:"Settings"}],menu:{icon:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.home,onClick:onMenuMock,tooltip:"Home"},title:"AppBar"}},Actions={args:{...Primary.args,actions:[{badge:{color:"error",value:"5"},icon:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.notifications,onClick:onActionMock,tooltip:"Notifications"},{icon:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.mail,onClick:onActionMock,tooltip:"Mail"},{icon:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.settings,onClick:onActionMock,tooltip:"Settings"}]}},CustomContent={args:{...Primary.args,children:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{alignItems:"center",display:"flex"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Typography__WEBPACK_IMPORTED_MODULE_8__.Ay,null,"Home"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icon__WEBPACK_IMPORTED_MODULE_7__.Ay,{name:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.right}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Typography__WEBPACK_IMPORTED_MODULE_8__.Ay,null,"Section"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Icon__WEBPACK_IMPORTED_MODULE_7__.Ay,{name:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.right}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Typography__WEBPACK_IMPORTED_MODULE_8__.Ay,null,"Detail")),onTitleClick:void 0,title:void 0}},Empty={args:{title:"Empty"}},Locale={args:{...Primary.args,locale:{items:[{label:"English",value:"en"},{label:"Italian",value:"it"}],label:"en",onItemClick:onLocaleMock}}},Localized={args:{...Primary.args,localized:!0,title:_utils_stories_decorators_Locale__WEBPACK_IMPORTED_MODULE_6__.Sp.title}},Styled={args:{...Primary.args,style:{border:"2px solid #3f51b5",borderRadius:"4px",backgroundColor:"#6495ed"}}},TitleClickable={args:{onTitleClick:onTitleMock,title:"Title"},play:async({canvasElement:canvasElement})=>{const titleClickable=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement).getByTestId((0,_utils__WEBPACK_IMPORTED_MODULE_3__.ne)(___WEBPACK_IMPORTED_MODULE_9__.Y5,___WEBPACK_IMPORTED_MODULE_9__.op.titleClickable));titleClickable&&(_storybook_test__WEBPACK_IMPORTED_MODULE_1__.rC.click(titleClickable),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(onTitleMock).toHaveBeenCalledTimes(onTitleMock.mock.calls.length))}},Username={args:{...Primary.args,user:{items:[{label:"View Details",onClick:onUserMock,value:"details"},{label:"Logout",onClick:onUserMock,value:"logout"}],label:"mosaic@github"}}},UsernameIcon={args:{...Primary.args,user:{items:[{label:"View Details",onClick:onUserMock,value:"details"},{label:"Logout",onClick:onUserMock,value:"logout"}],label:"mosaic@github",type:"icon"}}},UserMenu={args:{...Primary.args,userMenu:[{label:"Logout",onClick:onUserMock}]}},__namedExportsOrder=["Primary","Actions","CustomContent","Empty","Locale","Localized","Styled","TitleClickable","Username","UsernameIcon","UserMenu"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    actions: [{\n      icon: Icons.settings,\n      onClick: onActionMock,\n      tooltip: "Settings"\n    }],\n    menu: {\n      icon: Icons.home,\n      onClick: onMenuMock,\n      tooltip: "Home"\n    },\n    title: "AppBar"\n  }\n}',...Primary.parameters?.docs?.source}}},Actions.parameters={...Actions.parameters,docs:{...Actions.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    actions: [{\n      badge: {\n        color: "error",\n        value: "5"\n      },\n      icon: Icons.notifications,\n      onClick: onActionMock,\n      tooltip: "Notifications"\n    }, {\n      icon: Icons.mail,\n      onClick: onActionMock,\n      tooltip: "Mail"\n    }, {\n      icon: Icons.settings,\n      onClick: onActionMock,\n      tooltip: "Settings"\n    }]\n  }\n}',...Actions.parameters?.docs?.source}}},CustomContent.parameters={...CustomContent.parameters,docs:{...CustomContent.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    children: <div style={{\n      alignItems: "center",\n      display: "flex"\n    }}>\n        <Typography>Home</Typography>\n        <Icon name={Icons.right} />\n        <Typography>Section</Typography>\n        <Icon name={Icons.right} />\n        <Typography>Detail</Typography>\n      </div>,\n    onTitleClick: undefined,\n    title: undefined\n  }\n}',...CustomContent.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:'{\n  args: {\n    title: "Empty"\n  }\n}',...Empty.parameters?.docs?.source}}},Locale.parameters={...Locale.parameters,docs:{...Locale.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    locale: {\n      items: [{\n        label: "English",\n        value: "en"\n      }, {\n        label: "Italian",\n        value: "it"\n      }],\n      label: "en",\n      onItemClick: onLocaleMock\n    }\n  }\n}',...Locale.parameters?.docs?.source}}},Localized.parameters={...Localized.parameters,docs:{...Localized.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    localized: true,\n    title: MessageMock.title\n  }\n}",...Localized.parameters?.docs?.source}}},Styled.parameters={...Styled.parameters,docs:{...Styled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    style: {\n      border: "2px solid #3f51b5",\n      borderRadius: "4px",\n      backgroundColor: "#6495ed"\n    }\n  }\n}',...Styled.parameters?.docs?.source}}},TitleClickable.parameters={...TitleClickable.parameters,docs:{...TitleClickable.parameters?.docs,source:{originalSource:'{\n  args: {\n    onTitleClick: onTitleMock,\n    title: "Title"\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const titleClickable = canvas.getByTestId(getComposedDataCy(DATA_CY_DEFAULT, SUBPARTS_MAP.titleClickable));\n    if (!titleClickable) {\n      return;\n    }\n    fireEvent.click(titleClickable);\n    await expect(onTitleMock).toHaveBeenCalledTimes(onTitleMock.mock.calls.length);\n  }\n}',...TitleClickable.parameters?.docs?.source}}},Username.parameters={...Username.parameters,docs:{...Username.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    user: {\n      items: [{\n        label: "View Details",\n        onClick: onUserMock,\n        value: "details"\n      }, {\n        label: "Logout",\n        onClick: onUserMock,\n        value: "logout"\n      }],\n      label: "mosaic@github"\n    }\n  }\n}',...Username.parameters?.docs?.source}}},UsernameIcon.parameters={...UsernameIcon.parameters,docs:{...UsernameIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    user: {\n      items: [{\n        label: "View Details",\n        onClick: onUserMock,\n        value: "details"\n      }, {\n        label: "Logout",\n        onClick: onUserMock,\n        value: "logout"\n      }],\n      label: "mosaic@github",\n      type: "icon"\n    }\n  }\n}',...UsernameIcon.parameters?.docs?.source}}},UserMenu.parameters={...UserMenu.parameters,docs:{...UserMenu.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    userMenu: [{\n      label: "Logout",\n      onClick: onUserMock\n    }]\n  }\n}',...UserMenu.parameters?.docs?.source}}}}}]);