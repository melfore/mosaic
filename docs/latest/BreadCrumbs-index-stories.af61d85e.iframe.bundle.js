"use strict";(self.webpackChunk_melfore_mosaic=self.webpackChunk_melfore_mosaic||[]).push([[404],{"./src/components/BreadCrumbs/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomSeparator:function(){return CustomSeparator},Localized:function(){return Localized},Primary:function(){return Primary},SizeLarge:function(){return SizeLarge},SizeMedium:function(){return SizeMedium},WithIcons:function(){return WithIcons},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return index_stories}});var react=__webpack_require__("./node_modules/react/index.js"),createSvgIcon=__webpack_require__("./node_modules/@mui/material/utils/createSvgIcon.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Accessibility=(0,createSvgIcon.A)((0,jsx_runtime.jsx)("path",{d:"M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m9 7h-6v13h-2v-6h-2v6H9V9H3V7h18z"}),"Accessibility"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),Icon=__webpack_require__("./src/types/Icon.ts"),utils=__webpack_require__("./src/utils/index.ts"),logger=__webpack_require__("./src/utils/logger/index.ts"),stories=__webpack_require__("./src/utils/stories/index.tsx"),Locale=__webpack_require__("./src/utils/stories/decorators/Locale.tsx"),BreadCrumbs=__webpack_require__("./src/components/BreadCrumbs/index.tsx");(0,dist.jK)({testIdAttribute:"data-cy"});BreadCrumbs.Uj.displayName="BreadCrumbs";var index_stories={title:"Navigation/BreadCrumbs",component:BreadCrumbs.Uj,decorators:[Locale.Ay],parameters:{docs:{...(0,stories.A)({basedOn:{label:"MUI BreadCrumbs Component",url:"https://mui.com/material-ui/react-breadcrumbs/"},component:"BreadCrumbs",e2eTestInfo:{dataCyDefault:BreadCrumbs.Y5,dataCyShortcut:BreadCrumbs.Dx},localizableProps:BreadCrumbs.eH}),description:{component:"The BreadCrumbs component displays the current page location in a hierarchy."}}}};const linksMock=[{label:"page1",href:"//google.com/page1"},{label:"page2",href:"//google.com/page2"},{label:"page3",href:"//google.com/page3"}],onClickMock=(0,dist.fn)((()=>(0,logger.fH)("BreadCrumbs","onClick handler"))),Primary={args:{dataCy:BreadCrumbs.Y5,links:linksMock,onClick:onClickMock},play:async({canvasElement:canvasElement,step:step})=>{const canvas=(0,dist.ux)(canvasElement);await step("First Link",(async()=>{const firstLinkDataCy=(0,utils.ne)(BreadCrumbs.Y5,BreadCrumbs.op.links,0),firstLink=canvas.getAllByTestId(firstLinkDataCy).at(0);firstLink&&(dist.rC.click(firstLink),await(0,dist.E3)(onClickMock).toHaveBeenCalledTimes(onClickMock.mock.calls.length),await(0,dist.E3)(onClickMock).toHaveBeenCalledWith(linksMock[0].href))})),await step("Last Link",(async()=>{const lastIndex=linksMock.length-1,lastLinkDataCy=(0,utils.ne)(BreadCrumbs.Y5,BreadCrumbs.op.links,lastIndex),lastLink=canvas.getAllByTestId(lastLinkDataCy).at(0);lastLink&&(dist.rC.click(lastLink),await(0,dist.E3)(onClickMock).toHaveBeenCalledTimes(onClickMock.mock.calls.length))}))}},CustomSeparator={args:{...Primary.args,separator:">"}},SizeMedium={args:{...Primary.args,size:"medium"}},SizeLarge={args:{...Primary.args,size:"large"}},WithIcons={args:{...Primary.args,links:linksMock.map(((link,index)=>({...link,icon:index%2==0?Icon.F.clock:react.createElement(Accessibility,null)})))}},Localized={args:{...Primary.args,localized:!0,links:linksMock.map((link=>({...link,label:`locale.${link.label}`})))}},__namedExportsOrder=["Primary","CustomSeparator","SizeMedium","SizeLarge","WithIcons","Localized"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    dataCy: DATA_CY_DEFAULT,\n    links: linksMock,\n    onClick: onClickMock\n  },\n  play: async ({\n    canvasElement,\n    step\n  }) => {\n    const canvas = within(canvasElement);\n    await step("First Link", async () => {\n      const firstIndex = 0;\n      const firstLinkDataCy = getComposedDataCy(DATA_CY_DEFAULT, SUBPARTS_MAP.links, firstIndex);\n      const firstLink = canvas.getAllByTestId(firstLinkDataCy).at(0);\n      if (!firstLink) {\n        return;\n      }\n      fireEvent.click(firstLink);\n      await expect(onClickMock).toHaveBeenCalledTimes(onClickMock.mock.calls.length);\n      await expect(onClickMock).toHaveBeenCalledWith(linksMock[firstIndex].href);\n    });\n    await step("Last Link", async () => {\n      const lastIndex = linksMock.length - 1;\n      const lastLinkDataCy = getComposedDataCy(DATA_CY_DEFAULT, SUBPARTS_MAP.links, lastIndex);\n      const lastLink = canvas.getAllByTestId(lastLinkDataCy).at(0);\n      if (!lastLink) {\n        return;\n      }\n      fireEvent.click(lastLink);\n      await expect(onClickMock).toHaveBeenCalledTimes(onClickMock.mock.calls.length);\n    });\n  }\n}',...Primary.parameters?.docs?.source}}},CustomSeparator.parameters={...CustomSeparator.parameters,docs:{...CustomSeparator.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    separator: ">"\n  }\n}',...CustomSeparator.parameters?.docs?.source}}},SizeMedium.parameters={...SizeMedium.parameters,docs:{...SizeMedium.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    size: "medium"\n  }\n}',...SizeMedium.parameters?.docs?.source}}},SizeLarge.parameters={...SizeLarge.parameters,docs:{...SizeLarge.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    size: "large"\n  }\n}',...SizeLarge.parameters?.docs?.source}}},WithIcons.parameters={...WithIcons.parameters,docs:{...WithIcons.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    links: linksMock.map((link, index) => ({\n      ...link,\n      icon: index % 2 === 0 ? Icons.clock : <AccessibilityIcon />\n    }))\n  }\n}",...WithIcons.parameters?.docs?.source}}},Localized.parameters={...Localized.parameters,docs:{...Localized.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    localized: true,\n    links: linksMock.map(link => ({\n      ...link,\n      label: `locale.${link.label}`\n    }))\n  }\n}",...Localized.parameters?.docs?.source}}}}}]);