(self.webpackChunk_melfore_mosaic=self.webpackChunk_melfore_mosaic||[]).push([[443],{"./node_modules/@mui/icons-material/esm/Style.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var _utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@mui/material/utils/createSvgIcon.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.A=(0,_utils_createSvgIcon_js__WEBPACK_IMPORTED_MODULE_1__.A)((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"m2.53 19.65 1.34.56v-9.03l-2.43 5.86c-.41 1.02.08 2.19 1.09 2.61m19.5-3.7L17.07 3.98c-.31-.75-1.04-1.21-1.81-1.23-.26 0-.53.04-.79.15L7.1 5.95c-.75.31-1.21 1.03-1.23 1.8-.01.27.04.54.15.8l4.96 11.97c.31.76 1.05 1.22 1.83 1.23.26 0 .52-.05.77-.15l7.36-3.05c1.02-.42 1.51-1.59 1.09-2.6M7.88 8.75c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1m-2 11c0 1.1.9 2 2 2h1.45l-3.45-8.34z"}),"Style")},"./src/components/TableVirtualized/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColumnFilters:function(){return ColumnFilters},ColumnFiltersSticky:function(){return ColumnFiltersSticky},ColumnFiltersStickyWithActions:function(){return ColumnFiltersStickyWithActions},ColumnFiltersStickyWithActionsStickySelection:function(){return ColumnFiltersStickyWithActionsStickySelection},DataActions:function(){return DataActions},EmptyState:function(){return EmptyState},Loading:function(){return Loading},Localized:function(){return Localized},NoData:function(){return NoData},PageSizeCustom:function(){return PageSizeCustom},Pagination:function(){return Pagination},Primary:function(){return Primary},RowClickable:function(){return RowClickable},Selectable:function(){return Selectable},Sortable:function(){return Sortable},Sticky:function(){return Sticky},StickyPagination:function(){return StickyPagination},Styled:function(){return Styled},StyledRow:function(){return StyledRow},TableLayoutAuto:function(){return TableLayoutAuto},TableLayoutAutoSelectionSticky:function(){return TableLayoutAutoSelectionSticky},TableLayoutSticky:function(){return TableLayoutSticky},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return index_stories}});var react=__webpack_require__("./node_modules/react/index.js"),Style=__webpack_require__("./node_modules/@mui/icons-material/esm/Style.js"),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");__webpack_require__("?be03");var Icon=__webpack_require__("./src/types/Icon.ts"),utils=__webpack_require__("./src/utils/index.ts"),logger=__webpack_require__("./src/utils/logger/index.ts"),stories=__webpack_require__("./src/utils/stories/index.tsx"),Locale=__webpack_require__("./src/utils/stories/decorators/Locale.tsx"),Table_utils=__webpack_require__("./src/components/Table/utils.ts"),TableVirtualized=__webpack_require__("./src/components/TableVirtualized/index.tsx");(0,dist.jK)({testIdAttribute:"data-cy"});TableVirtualized.zq.displayName="TableVirtualized";var index_stories={title:"Display/TableVirtualized",component:TableVirtualized.zq,decorators:[Locale.Ay],parameters:{docs:{...(0,stories.A)({basedOn:{label:"MUI Table Component",url:"https://mui.com/components/tables/"},component:"TableVirtualized",e2eTestInfo:{dataCyDefault:TableVirtualized.Y5,dataCyShortcut:TableVirtualized.Dx,subpartsSuffixes:(0,utils.kC)(TableVirtualized.op)},localizableProps:TableVirtualized.eH}),description:{component:"The TableVirtualized component is used to display data in a table format virtualizing rows rendering"}}}};const onPageMock=(0,dist.fn)((()=>(0,logger.fH)("TableVirtualized","onPageChange handler"))),onPageSizeMock=(0,dist.fn)((()=>(0,logger.fH)("TableVirtualized","onPageSizeChange handler"))),onRowMock=(0,dist.fn)((()=>(0,logger.fH)("TableVirtualized","onRow handler"))),onSelectMock=(0,dist.fn)((()=>(0,logger.fH)("TableVirtualized","onSelect handler"))),onSortMock=(0,dist.fn)((()=>(0,logger.fH)("TableVirtualized","onSort handler"))),waitForVirtuosoTable=async canvas=>{const tbody=canvas.getByTestId((0,utils.ne)(TableVirtualized.Y5,TableVirtualized.op.tableBody));await(async condition=>{let result=condition(),timeout=2e3;for(;!result&&timeout>0;)await new Promise((resolve=>setTimeout(resolve,100))),result=condition(),timeout-=100;if(!result)throw new Error("Timeout exceeded");return result})((()=>tbody.childNodes.length>0))},Primary={args:{columns:Table_utils.FZ,onPageChange:void 0,onPageSizeChange:void 0,onRowClick:void 0,onSelectionChange:void 0,onSortChange:void 0,rows:Table_utils.wZ,dataCy:TableVirtualized.Y5,title:"TableVirtualized"},play:async({canvasElement:canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await waitForVirtuosoTable(canvas)}},onActionMock=(0,dist.fn)((()=>{})),onDataAction=(actionName,data,options)=>{console.info({data:data},{options:options}),(0,logger.fH)("TableVirtualized",`=> on '${actionName}' handler`),onActionMock()},DataActions={args:{...Primary.args,actions:[{callback:(data,options)=>onDataAction("Add",data,options),icon:Icon.F.add,label:"Add"},{callback:(data,options)=>onDataAction("Custom",data,options),icon:react.createElement(Style.A,null),label:"Custom"},{callback:(data,options)=>onDataAction("Send",data,options),disabled:!0,icon:Icon.F.block,label:"Send"},{badge:{color:"secondary",overlap:"circular",value:"1",variant:"standard"},callback:(data,options)=>onDataAction("Filter",data,options),icon:Icon.F.filter,label:"Filter",position:"icon",tooltip:"1 filter applied"},{callback:(data,options)=>onDataAction("Close",data,options),icon:Icon.F.close,label:"Close",position:"icon"},{callback:(data,options)=>onDataAction("Custom",data,options),icon:react.createElement(Style.A,null),label:"Custom",position:"row"},{callback:(data,options)=>onDataAction("Edit",data,options),icon:Icon.F.edit,label:"Edit",position:"primary"},{callback:(data,options)=>onDataAction("Notify",data,options),disabled:data=>data.age>40,icon:Icon.F.notifications,label:"Notify",position:"row"},{callback:(data,options)=>onDataAction("Delete",data,options),disabled:!0,icon:Icon.F.delete,label:"Delete",position:"row"},{callback:(data,options)=>onDataAction("Delete >= 3",data,options),disabled:data=>data.length<3,icon:Icon.F.delete,label:"Delete at least 3",position:"selection"}]},play:Primary.play},Loading={args:{...Primary.args,loading:!0},play:Primary.play},Localized={args:{...Primary.args,localized:!0,title:Locale.Sp.title},play:Primary.play},NoData={args:{...Primary.args,rows:[]},play:Primary.play},EmptyState={args:{...NoData.args,emptyState:"Custom Empty State"},play:Primary.play},PageSizeCustom={args:{...Primary.args,onPageChange:onPageMock,onPageSizeChange:onPageSizeMock,pageSize:3,pageSizeOptions:[3,6,9],rows:[...Primary.args.rows.slice(0,3)],rowsTotal:30},play:Primary.play},Pagination={args:{...Primary.args,onPageChange:onPageMock,rows:[...Primary.args.rows.slice(0,10)],rowsTotal:100},play:async({canvasElement:canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await waitForVirtuosoTable(canvas);const nextPageButton=canvas.getByTestId((0,utils.ne)(TableVirtualized.Y5,TableVirtualized.op.pagination,"next"));nextPageButton&&(dist.rC.click(nextPageButton),(0,dist.E3)(onPageMock).toHaveBeenCalledTimes(onPageMock.mock.calls.length))}},RowClickable={args:{...Primary.args,onRowClick:onRowMock},play:async({canvasElement:canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await waitForVirtuosoTable(canvas);const secondRow=canvas.getAllByRole("cell").at(1);secondRow&&(dist.rC.click(secondRow),(0,dist.E3)(onRowMock).toHaveBeenCalledTimes(onRowMock.mock.calls.length))}},Selectable={args:{...Primary.args,onSelectionChange:onSelectMock},play:async({canvasElement:canvasElement,step:step})=>{const canvas=(0,dist.ux)(canvasElement);await waitForVirtuosoTable(canvas);const selectAll=canvas.getByTestId((0,utils.ne)(TableVirtualized.Y5,TableVirtualized.op.selectAll));if(!selectAll)return;await step("Select all",(async()=>{dist.rC.click(selectAll),await(0,dist.E3)(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length)})),await step("Deselect all",(async()=>{dist.rC.click(selectAll),await(0,dist.E3)(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length)}));const selectOne=canvas.getAllByTestId("checkbox-input").at(1);selectOne&&(await step("Select one",(async()=>{dist.rC.click(selectOne),await(0,dist.E3)(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length)})),await step("Deselect one",(async()=>{dist.rC.click(selectOne),await(0,dist.E3)(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length)})))}},Sortable={args:{...Primary.args,onSortChange:onSortMock},play:async({canvasElement:canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await waitForVirtuosoTable(canvas);const firstHeading=canvas.getAllByRole("columnheader").at(0);firstHeading&&(dist.rC.click(firstHeading),(0,dist.E3)(onSortMock).toHaveBeenCalledTimes(onSortMock.mock.calls.length))}},Sticky={args:{...Primary.args,height:400,onPageChange:void 0,onPageSizeChange:void 0,rows:[...Primary.args.rows,...Primary.args.rows,...Primary.args.rows],sticky:!0},play:Primary.play},StickyPagination={args:{...Primary.args,height:400,onPageChange:onPageMock,rows:[...Primary.args.rows,...Primary.args.rows,...Primary.args.rows],sticky:!0},play:Primary.play},Styled={args:{...Primary.args,style:{backgroundColor:"cyan"}},play:Primary.play},StyledRow={args:{...Primary.args,actions:[{callback:(data,options)=>onDataAction("Edit",data,options),icon:Icon.F.edit,label:"Edit",position:"primary"}],getRowStyle:(row,options)=>({backgroundColor:(options?.indexes[0]||0)%2==0?"lightyellow":"lightgreen"})},play:Primary.play},TableLayoutAuto={args:{...Primary.args,actions:[{callback:(data,options)=>onDataAction("Add",data,options),icon:Icon.F.add,label:"Add"},{callback:(data,options)=>onDataAction("Edit",data,options),icon:Icon.F.edit,label:"Edit",position:"primary"},{callback:(data,options)=>onDataAction("Delete",data,options),icon:Icon.F.close,label:"Delete",position:"primary"}],columns:Table_utils.l0,rows:Table_utils.wZ,rowsTotal:6,tableLayout:"auto",title:"Try to scroll horizontally"},play:Primary.play},TableLayoutAutoSelectionSticky={args:{...TableLayoutAuto.args,onSelectionChange:onSelectMock,stickySelection:!0},play:Primary.play},TableLayoutSticky={args:{...Primary.args,sticky:!0,height:400,actions:[{callback:(data,options)=>onDataAction("Add",data,options),icon:Icon.F.add,label:"Add"}],columns:Table_utils.l0,rows:(0,Table_utils.db)(50),rowsTotal:500,tableLayout:"auto",title:"Try to scroll both ways"},play:Primary.play},ColumnFilters={args:{...Primary.args,columns:[{label:"Name",path:"name",renderFilter:react.createElement(TextField.A,{label:"type to filter",type:"text",variant:"standard"})},{label:"Age",path:"age"}],height:400,rows:[...Primary.args.rows,...Primary.args.rows,...Primary.args.rows],showFilters:!0,title:"Column Filters"},play:Primary.play},ColumnFiltersSticky={args:{...ColumnFilters.args,sticky:!0,title:"Column Filters (sticky)"},play:Primary.play},ColumnFiltersStickyWithActions={args:{...ColumnFiltersSticky.args,actions:[{callback:(data,options)=>onDataAction("Add",data,options),icon:Icon.F.add,label:"Add"},{callback:(data,options)=>onDataAction("Close",data,options),icon:Icon.F.close,label:"Close",position:"icon"},{callback:(data,options)=>onDataAction("Custom",data,options),icon:react.createElement(Style.A,null),label:"Custom",position:"row"},{callback:(data,options)=>onDataAction("Edit",data,options),icon:Icon.F.edit,label:"Edit",position:"primary"},{callback:(data,options)=>onDataAction("Delete >= 3",data,options),disabled:data=>data.length<3,icon:Icon.F.delete,label:"Delete at least 3",position:"selection"}],columns:(([first,...others])=>[{...first,renderFilter:react.createElement(TextField.A,{label:"type to filter",type:"text",variant:"standard"})},...others])(TableLayoutSticky.args.columns),rows:TableLayoutSticky.args.rows,tableLayout:"auto"},play:Primary.play},ColumnFiltersStickyWithActionsStickySelection={args:{...ColumnFiltersStickyWithActions.args,onSelectionChange:onSelectMock,stickySelection:!0},play:Primary.play},__namedExportsOrder=["Primary","DataActions","Loading","Localized","NoData","EmptyState","PageSizeCustom","Pagination","RowClickable","Selectable","Sortable","Sticky","StickyPagination","Styled","StyledRow","TableLayoutAuto","TableLayoutAutoSelectionSticky","TableLayoutSticky","ColumnFilters","ColumnFiltersSticky","ColumnFiltersStickyWithActions","ColumnFiltersStickyWithActionsStickySelection"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    columns: TABLE_MOCKED_COLUMNS,\n    onPageChange: undefined,\n    onPageSizeChange: undefined,\n    onRowClick: undefined,\n    onSelectionChange: undefined,\n    onSortChange: undefined,\n    rows: TABLE_MOCKED_DATA,\n    dataCy: DATA_CY_DEFAULT,\n    title: "TableVirtualized"\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await waitForVirtuosoTable(canvas);\n  }\n}',...Primary.parameters?.docs?.source}}},DataActions.parameters={...DataActions.parameters,docs:{...DataActions.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    actions: [{\n      callback: (data: any, options: any) => onDataAction("Add", data, options),\n      icon: Icons.add,\n      label: "Add"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Custom", data, options),\n      icon: <MUIStyleIcon />,\n      label: "Custom"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Send", data, options),\n      disabled: true,\n      icon: Icons.block,\n      label: "Send"\n    }, {\n      badge: {\n        color: "secondary",\n        overlap: "circular",\n        value: "1",\n        variant: "standard"\n      },\n      callback: (data: any, options: any) => onDataAction("Filter", data, options),\n      icon: Icons.filter,\n      label: "Filter",\n      position: "icon",\n      tooltip: "1 filter applied"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Close", data, options),\n      icon: Icons.close,\n      label: "Close",\n      position: "icon"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Custom", data, options),\n      icon: <MUIStyleIcon />,\n      label: "Custom",\n      position: "row"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Edit", data, options),\n      icon: Icons.edit,\n      label: "Edit",\n      position: "primary"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Notify", data, options),\n      disabled: (data: any) => data.age > 40,\n      icon: Icons.notifications,\n      label: "Notify",\n      position: "row"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Delete", data, options),\n      disabled: true,\n      icon: Icons.delete,\n      label: "Delete",\n      position: "row"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Delete >= 3", data, options),\n      disabled: (data: any[]) => data.length < 3,\n      icon: Icons.delete,\n      label: "Delete at least 3",\n      position: "selection"\n    }]\n  },\n  play: Primary.play\n}',...DataActions.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    loading: true\n  },\n  play: Primary.play\n}",...Loading.parameters?.docs?.source}}},Localized.parameters={...Localized.parameters,docs:{...Localized.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    localized: true,\n    title: MessageMock.title\n  },\n  play: Primary.play\n}",...Localized.parameters?.docs?.source}}},NoData.parameters={...NoData.parameters,docs:{...NoData.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    rows: []\n  },\n  play: Primary.play\n}",...NoData.parameters?.docs?.source}}},EmptyState.parameters={...EmptyState.parameters,docs:{...EmptyState.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...NoData.args,\n    emptyState: "Custom Empty State"\n  },\n  play: Primary.play\n}',...EmptyState.parameters?.docs?.source}}},PageSizeCustom.parameters={...PageSizeCustom.parameters,docs:{...PageSizeCustom.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    onPageChange: onPageMock,\n    onPageSizeChange: onPageSizeMock,\n    pageSize: 3,\n    pageSizeOptions: [3, 6, 9],\n    rows: [...Primary.args.rows!.slice(0, 3)],\n    rowsTotal: 30\n  },\n  play: Primary.play\n}",...PageSizeCustom.parameters?.docs?.source}}},Pagination.parameters={...Pagination.parameters,docs:{...Pagination.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    onPageChange: onPageMock,\n    rows: [...Primary.args.rows!.slice(0, 10)],\n    rowsTotal: 100\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await waitForVirtuosoTable(canvas);\n    const nextPageButton = canvas.getByTestId(getComposedDataCy(DATA_CY_DEFAULT, SUBPARTS_MAP.pagination, "next"));\n    if (!nextPageButton) {\n      return;\n    }\n    fireEvent.click(nextPageButton);\n    expect(onPageMock).toHaveBeenCalledTimes(onPageMock.mock.calls.length);\n  }\n}',...Pagination.parameters?.docs?.source}}},RowClickable.parameters={...RowClickable.parameters,docs:{...RowClickable.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    onRowClick: onRowMock\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await waitForVirtuosoTable(canvas);\n    const secondRow = canvas.getAllByRole("cell").at(1);\n    if (!secondRow) {\n      return;\n    }\n    fireEvent.click(secondRow);\n    expect(onRowMock).toHaveBeenCalledTimes(onRowMock.mock.calls.length);\n  }\n}',...RowClickable.parameters?.docs?.source}}},Selectable.parameters={...Selectable.parameters,docs:{...Selectable.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    onSelectionChange: onSelectMock\n  },\n  play: async ({\n    canvasElement,\n    step\n  }) => {\n    const canvas = within(canvasElement);\n    await waitForVirtuosoTable(canvas);\n    const selectAll = canvas.getByTestId(getComposedDataCy(DATA_CY_DEFAULT, SUBPARTS_MAP.selectAll));\n    if (!selectAll) {\n      return;\n    }\n    await step("Select all", async () => {\n      fireEvent.click(selectAll);\n      await expect(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length);\n    });\n    await step("Deselect all", async () => {\n      fireEvent.click(selectAll);\n      await expect(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length);\n    });\n    const selectOne = canvas.getAllByTestId("checkbox-input").at(1);\n    if (!selectOne) {\n      return;\n    }\n    await step("Select one", async () => {\n      fireEvent.click(selectOne);\n      await expect(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length);\n    });\n    await step("Deselect one", async () => {\n      fireEvent.click(selectOne);\n      await expect(onSelectMock).toHaveBeenCalledTimes(onSelectMock.mock.calls.length);\n    });\n  }\n}',...Selectable.parameters?.docs?.source}}},Sortable.parameters={...Sortable.parameters,docs:{...Sortable.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    onSortChange: onSortMock\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await waitForVirtuosoTable(canvas);\n    const firstHeading = canvas.getAllByRole("columnheader").at(0);\n    if (!firstHeading) {\n      return;\n    }\n    fireEvent.click(firstHeading);\n    expect(onSortMock).toHaveBeenCalledTimes(onSortMock.mock.calls.length);\n  }\n}',...Sortable.parameters?.docs?.source}}},Sticky.parameters={...Sticky.parameters,docs:{...Sticky.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    height: 400,\n    onPageChange: undefined,\n    onPageSizeChange: undefined,\n    rows: [...Primary.args.rows!, ...Primary.args.rows!, ...Primary.args.rows!],\n    sticky: true\n  },\n  play: Primary.play\n}",...Sticky.parameters?.docs?.source}}},StickyPagination.parameters={...StickyPagination.parameters,docs:{...StickyPagination.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    height: 400,\n    onPageChange: onPageMock,\n    rows: [...Primary.args.rows!, ...Primary.args.rows!, ...Primary.args.rows!],\n    sticky: true\n  },\n  play: Primary.play\n}",...StickyPagination.parameters?.docs?.source}}},Styled.parameters={...Styled.parameters,docs:{...Styled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    style: {\n      backgroundColor: "cyan"\n    }\n  },\n  play: Primary.play\n}',...Styled.parameters?.docs?.source}}},StyledRow.parameters={...StyledRow.parameters,docs:{...StyledRow.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    actions: [{\n      callback: (data: any, options: any) => onDataAction("Edit", data, options),\n      icon: Icons.edit,\n      label: "Edit",\n      position: "primary"\n    }],\n    getRowStyle: (row: any, options: any) => {\n      const index = options?.indexes[0] || 0;\n      return {\n        backgroundColor: index % 2 === 0 ? "lightyellow" : "lightgreen"\n      };\n    }\n  },\n  play: Primary.play\n}',...StyledRow.parameters?.docs?.source}}},TableLayoutAuto.parameters={...TableLayoutAuto.parameters,docs:{...TableLayoutAuto.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    actions: [{\n      callback: (data: any, options: any) => onDataAction("Add", data, options),\n      icon: Icons.add,\n      label: "Add"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Edit", data, options),\n      icon: Icons.edit,\n      label: "Edit",\n      position: "primary"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Delete", data, options),\n      icon: Icons.close,\n      label: "Delete",\n      position: "primary"\n    }],\n    columns: TABLE_MOCKED_COLUMNS_FULL,\n    rows: TABLE_MOCKED_DATA,\n    rowsTotal: 6,\n    tableLayout: "auto",\n    title: "Try to scroll horizontally"\n  },\n  play: Primary.play\n}',...TableLayoutAuto.parameters?.docs?.source}}},TableLayoutAutoSelectionSticky.parameters={...TableLayoutAutoSelectionSticky.parameters,docs:{...TableLayoutAutoSelectionSticky.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...TableLayoutAuto.args,\n    onSelectionChange: onSelectMock,\n    stickySelection: true\n  },\n  play: Primary.play\n}",...TableLayoutAutoSelectionSticky.parameters?.docs?.source}}},TableLayoutSticky.parameters={...TableLayoutSticky.parameters,docs:{...TableLayoutSticky.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    sticky: true,\n    height: 400,\n    actions: [{\n      callback: (data: any, options: any) => onDataAction("Add", data, options),\n      icon: Icons.add,\n      label: "Add"\n    }],\n    columns: TABLE_MOCKED_COLUMNS_FULL,\n    rows: createLargeMockedData(50),\n    rowsTotal: 500,\n    tableLayout: "auto",\n    title: "Try to scroll both ways"\n  },\n  play: Primary.play\n}',...TableLayoutSticky.parameters?.docs?.source}}},ColumnFilters.parameters={...ColumnFilters.parameters,docs:{...ColumnFilters.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    columns: [{\n      label: "Name",\n      path: "name",\n      renderFilter: <MUITextField label="type to filter" type="text" variant="standard" />\n    }, {\n      label: "Age",\n      path: "age"\n    }],\n    height: 400,\n    rows: [...Primary.args.rows!, ...Primary.args.rows!, ...Primary.args.rows!],\n    showFilters: true,\n    title: "Column Filters"\n  },\n  play: Primary.play\n}',...ColumnFilters.parameters?.docs?.source}}},ColumnFiltersSticky.parameters={...ColumnFiltersSticky.parameters,docs:{...ColumnFiltersSticky.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...ColumnFilters.args,\n    sticky: true,\n    title: "Column Filters (sticky)"\n  },\n  play: Primary.play\n}',...ColumnFiltersSticky.parameters?.docs?.source}}},ColumnFiltersStickyWithActions.parameters={...ColumnFiltersStickyWithActions.parameters,docs:{...ColumnFiltersStickyWithActions.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...ColumnFiltersSticky.args,\n    actions: [{\n      callback: (data: any, options: any) => onDataAction("Add", data, options),\n      icon: Icons.add,\n      label: "Add"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Close", data, options),\n      icon: Icons.close,\n      label: "Close",\n      position: "icon"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Custom", data, options),\n      icon: <MUIStyleIcon />,\n      label: "Custom",\n      position: "row"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Edit", data, options),\n      icon: Icons.edit,\n      label: "Edit",\n      position: "primary"\n    }, {\n      callback: (data: any, options: any) => onDataAction("Delete >= 3", data, options),\n      disabled: (data: any[]) => data.length < 3,\n      icon: Icons.delete,\n      label: "Delete at least 3",\n      position: "selection"\n    }],\n    columns: addFilterToFirstColumn(TableLayoutSticky.args.columns),\n    rows: TableLayoutSticky.args.rows,\n    tableLayout: "auto"\n  },\n  play: Primary.play\n}',...ColumnFiltersStickyWithActions.parameters?.docs?.source}}},ColumnFiltersStickyWithActionsStickySelection.parameters={...ColumnFiltersStickyWithActionsStickySelection.parameters,docs:{...ColumnFiltersStickyWithActionsStickySelection.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...ColumnFiltersStickyWithActions.args,\n    onSelectionChange: onSelectMock,\n    stickySelection: true\n  },\n  play: Primary.play\n}",...ColumnFiltersStickyWithActionsStickySelection.parameters?.docs?.source}}}},"?be03":function(){}}]);