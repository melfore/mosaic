"use strict";(self.webpackChunk_melfore_mosaic=self.webpackChunk_melfore_mosaic||[]).push([[447],{"./node_modules/@mui/icons-material/Style.js":function(__unused_webpack_module,exports,__webpack_require__){var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.A=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("./node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js");exports.A=(0,_createSvgIcon.default)((0,_jsxRuntime.jsx)("path",{d:"m2.53 19.65 1.34.56v-9.03l-2.43 5.86c-.41 1.02.08 2.19 1.09 2.61m19.5-3.7L17.07 3.98c-.31-.75-1.04-1.21-1.81-1.23-.26 0-.53.04-.79.15L7.1 5.95c-.75.31-1.21 1.03-1.23 1.8-.01.27.04.54.15.8l4.96 11.97c.31.76 1.05 1.22 1.83 1.23.26 0 .52-.05.77-.15l7.36-3.05c1.02-.42 1.51-1.59 1.09-2.6M7.88 8.75c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1m-2 11c0 1.1.9 2 2 2h1.45l-3.45-8.34z"}),"Style")},"./src/components/IconButton/index.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Badge:function(){return Badge},CustomIcon:function(){return CustomIcon},Disabled:function(){return Disabled},Primary:function(){return Primary},Rotate:function(){return Rotate},SizeLarge:function(){return SizeLarge},SizeSmall:function(){return SizeSmall},Styled:function(){return Styled},Tooltip:function(){return Tooltip},__namedExportsOrder:function(){return __namedExportsOrder}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_icons_material_Style__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/icons-material/Style.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_types_Icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/types/Icon.ts"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/index.ts"),_utils_logger__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/logger/index.ts"),_utils_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/utils/stories/index.tsx"),___WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/components/IconButton/index.tsx");(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.jK)({testIdAttribute:"data-cy"});const COMPONENT_NAME=___WEBPACK_IMPORTED_MODULE_6__.Ay.displayName,meta={title:"Inputs/IconButton",component:___WEBPACK_IMPORTED_MODULE_6__.Ay,parameters:{docs:{...(0,_utils_stories__WEBPACK_IMPORTED_MODULE_5__.A)({basedOn:{label:"MUI Button Component",url:"https://mui.com/material-ui/react-button/#icon-button"},component:COMPONENT_NAME,e2eTestInfo:{dataCyDefault:___WEBPACK_IMPORTED_MODULE_6__.Y5,subpartsSuffixes:(0,_utils__WEBPACK_IMPORTED_MODULE_3__.kC)(___WEBPACK_IMPORTED_MODULE_6__.op)}}),description:{component:"The IconButton component is used to create an icon button."}}}};__webpack_exports__.default=meta;const onClickMock=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.fn)((()=>(0,_utils_logger__WEBPACK_IMPORTED_MODULE_4__.fH)(COMPONENT_NAME,"onClick handler"))),Primary={args:{icon:_types_Icon__WEBPACK_IMPORTED_MODULE_2__.F.add,onClick:onClickMock},play:async({canvasElement:canvasElement})=>{const button=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.ux)(canvasElement).getByTestId(___WEBPACK_IMPORTED_MODULE_6__.Y5);button&&(_storybook_test__WEBPACK_IMPORTED_MODULE_1__.rC.click(button),await(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.E3)(onClickMock).toHaveBeenCalledTimes(onClickMock.mock.calls.length))}},Badge={args:{...Primary.args,badge:{color:"secondary",value:"8"}}},CustomIcon={args:{icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Style__WEBPACK_IMPORTED_MODULE_7__.A,null)}},Disabled={args:{...Primary.args,disabled:!0}},Rotate={args:{...Primary.args,rotate:!0}},SizeLarge={args:{...Primary.args,size:"large"}},SizeSmall={args:{...Primary.args,size:"small"}},Styled={args:{...Primary.args,style:{backgroundColor:"red",color:"white"}}},Tooltip={args:{...Primary.args,tooltip:"Add"}},__namedExportsOrder=["Primary","Badge","CustomIcon","Disabled","Rotate","SizeLarge","SizeSmall","Styled","Tooltip"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: Icons.add,\n    onClick: onClickMock\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const button = canvas.getByTestId(DATA_CY_DEFAULT);\n    if (button) {\n      fireEvent.click(button);\n      await expect(onClickMock).toHaveBeenCalledTimes(onClickMock.mock.calls.length);\n    }\n  }\n}",...Primary.parameters?.docs?.source}}},Badge.parameters={...Badge.parameters,docs:{...Badge.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    badge: {\n      color: "secondary",\n      value: "8"\n    }\n  }\n}',...Badge.parameters?.docs?.source}}},CustomIcon.parameters={...CustomIcon.parameters,docs:{...CustomIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    icon: <MUIStyleIcon />\n  }\n}",...CustomIcon.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},Rotate.parameters={...Rotate.parameters,docs:{...Rotate.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...Primary.args,\n    rotate: true\n  }\n}",...Rotate.parameters?.docs?.source}}},SizeLarge.parameters={...SizeLarge.parameters,docs:{...SizeLarge.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    size: "large"\n  }\n}',...SizeLarge.parameters?.docs?.source}}},SizeSmall.parameters={...SizeSmall.parameters,docs:{...SizeSmall.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    size: "small"\n  }\n}',...SizeSmall.parameters?.docs?.source}}},Styled.parameters={...Styled.parameters,docs:{...Styled.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    style: {\n      backgroundColor: "red",\n      color: "white"\n    }\n  }\n}',...Styled.parameters?.docs?.source}}},Tooltip.parameters={...Tooltip.parameters,docs:{...Tooltip.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Primary.args,\n    tooltip: "Add"\n  }\n}',...Tooltip.parameters?.docs?.source}}}}}]);